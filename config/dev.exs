import Config

# Configure your database
config :ex_poll, ExPoll.Repo,
  username: System.get_env("DATABASE_USER"),
  password: System.get_env("DATABASE_PASS"),
  database: "saga",
  hostname: System.get_env("DATABASE_HOST"),
  show_sensitive_data_on_connection_error: true,
  pool_size: 3

# For development, we disable any cache and enable
# debugging and code reloading.
#
# The watchers configuration can be used to run external
# watchers to your application. For example, we use it
# with esbuild to bundle .js and .css sources.
# config :toniq, redis_url: System.get_env("REDIS_URL")

config :ex_poll, ExPollWeb.Endpoint,
  # Binding to loopback ipv4 address prevents access from other machines.
  # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
  http: [port: 8080],
  debug_errors: true,
  code_reloader: true,
  check_origin: false,
  watchers: []

# ## SSL Support
#
# In order to use HTTPS in development, a self-signed
# certificate can be generated by running the following
# Mix task:
#
#     mix phx.gen.cert
#
# Note that this task requires Erlang/OTP 20 or later.
# Run `mix help phx.gen.cert` for more information.
#
# The `http:` config above can be replaced with:
#
#     https: [
#       port: 4001,
#       cipher_suite: :strong,
#       keyfile: "priv/cert/selfsigned_key.pem",
#       certfile: "priv/cert/selfsigned.pem"
#     ],
#
# If desired, both `http:` and `https:` keys can be
# configured to run both http and https servers on
# different ports.

# Do not include metadata nor timestamps in development logs
config :logger, :console, format: "[$level] $message\n"

# Set a higher stacktrace during development. Avoid configuring such
# in production as building large stacktraces may be expensive.
config :phoenix, :stacktrace_depth, 20

# Initialize plugs at runtime for faster development compilation
config :phoenix, :plug_init_mode, :runtime

config :etcdc,
  etcd_host: "etcd-service",
  etcd_client_port: 4001

config :alberto_amqp_client,
  pools: [
    [
      name: {:local, :producers_pool},
      worker_module: ExRabbitPool.Worker.RabbitConnection,
      size: 5,
      max_overflow: 0
    ],
    [
      name: {:local, :consumers_pool},
      worker_module: ExRabbitPool.Worker.RabbitConnection,
      size: 10,
      max_overflow: 0
    ]
  ]

config :alberto_amqp_client,
  queues: [
    %{
      module: AlbertoAmqp.Client.WorkflowDefault,
      config: %{
        queue: "on_create_solicitud_compra_credito",
        exchange: "on_create_solicitud_compra_credito",
        queue_error: "on_create_solicitud_compra_credito_error",
        queue_arguments: [
          {"x-dead-letter-exchange", :longstr, ""},
          {"x-dead-letter-routing-key", :longstr, "on_create_solicitud_compra_credito_error"}
        ]
      }
    }
  ]
